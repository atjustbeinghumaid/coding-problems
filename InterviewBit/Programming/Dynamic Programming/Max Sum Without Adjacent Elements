/*
Given a 2 * N Grid of numbers, choose numbers such that the sum of the numbers
is maximum and no two chosen numbers are adjacent horizontally, vertically or diagonally, and return it.

Example:

Grid:
	1 2 3 4
	2 3 4 5
so we will choose
3 and 5 so sum will be 3 + 5 = 8
*/

int Solution::adjacent(vector<vector<int> > &A) {
    int n = A[0].size();
    if(n==1)
    return max(A[0][0],A[1][0]);
    if(n==2){
        int m1 = max(A[0][0],A[1][0]);
        int m2 = max(A[0][1],A[1][1]);
        return max(m1,m2);
    }
    int prevRowMax = max(A[0][0],A[1][0]);
    int currMax = prevRowMax;
    int result = currMax;
    for(int i=2;i<n;i++){
        prevRowMax = max(prevRowMax,max(A[0][i-2],A[1][i-2]));
        A[0][i] += prevRowMax;
        A[1][i] += prevRowMax;
        currMax = max(A[0][i],A[1][i]);
        result = max(currMax,result);
    }
    return result;
}
