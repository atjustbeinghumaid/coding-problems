// https://leetcode.com/problems/top-k-frequent-elements/


class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        vector<int> result;
        unordered_map<int,int> map;
        for(int i=0;i<nums.size();i++)
            map[nums[i]]++;
        priority_queue< pair<int,int>,vector < pair<int,int> >,greater<pair<int,int> >> pq;
        for(auto i = map.begin(); i != map.end(); i++){
            if(pq.size() < k)
                pq.push({i->second,i->first});
            else{
                if(pq.top().first < i->second){
                    pq.pop();
                    pq.push({i->second,i->first});
                }
            }
        }
        
        while(!pq.empty()){
            result.insert(result.begin(),pq.top().second);
            pq.pop();
        }
        return result;
    }
};
