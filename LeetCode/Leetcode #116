/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* left;
    Node* right;
    Node* next;

    Node() {}

    Node(int _val, Node* _left, Node* _right, Node* _next) {
        val = _val;
        left = _left;
        right = _right;
        next = _next;
    }
};
*/
class Solution {
public:
    Node* connect(Node* root) {
        queue<Node*> q;
        q.push(root);
        q.push(NULL);
        while(!q.empty()){
            if(q.front() == NULL)
                break;
            int size = q.size();
            while(size--){
                Node *temp = q.front();
                q.pop();
                if(!temp)
                    continue;
                temp->next = q.front();
                if(temp->left)
                    q.push(temp->left);
                if(temp->right)
                    q.push(temp->right);
            }
            q.push(NULL);
        }
        return root;
    }
};
