#include<cmath>
void printSubsets(int *output,int size,int k){
    if(!size){
        return;
    }
    
    int sum = 0;
    for(int i=0;i<size;i++)
        sum+=output[i];
    if(sum==k){
        for(int i=0;i<size;i++)
            cout<<output[i]<<" ";
        cout<<endl;
    }
    return;
}


void generateSubsets(int *input,int size,int *output,int i,int k){
    if(size==0){
        printSubsets(output,i,k);
        return;
    }
    generateSubsets(input+1,size-1,output,i,k);
    output[i] = input[0];
    generateSubsets(input+1,size-1,output,i+1,k);
}


void printSubsetsOfArray(int *input,int size,int k){
    int maxSize = pow(2,size);
    int *output = new int[maxSize];
    generateSubsets(input,size,output,0,k);
}

void printSubsetSumToK(int input[], int size, int k) {
    // Write your code here
    printSubsetsOfArray(input,size,k);
}
