/*
Given a string S, remove consecutive duplicates from it recursively.
Input Format :
String S
Output Format :
Output string
Constraints :
1 <= Length of String S <= 10^3
Sample Input :
aabccba
Sample Output :
abcba
*/
#include<cstring>
void remDup(char*,int,int);
void removeConsecutiveDuplicates(char *input) {
	/* Don't write main().
	* Don't read input, it is passed as function argument.    
	* Change in the given string itself.
	* No need to return or print anything
	* Taking input and printing output is handled automatically.
	*/
    if(input[0]=='\0')
        return;
    if(input[0]==input[1]){
        int i = 0;
        while(input[i]!='\0'){
            input[i] = input[i+1];
            i++;
        }
        removeConsecutiveDuplicates(input);
    }
    else
        removeConsecutiveDuplicates(input+1);
    // remDup(input,0,strlen(input));
}
// void remDup(char* input,int i,int len){
//     if(len<=1)
//         return;
//     remDup(input,i+1,len--);
//     if(input[i]==input[i+1]){
//         int k = i;
//         while(input[k]!='\0'){
//             input[k]=input[k+1];
//             k++;
//         }
//     }
//     else
//         return;
    
// }
