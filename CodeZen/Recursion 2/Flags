/*
A flag can consists of only three different colors of stripes, White(W), Blue(B) and Red(R). Given an integer N, find and return the number of ways to create such flags having N stripes consisting of these three color stripes only with the following constraints -
1. Stripes of the same color cannot be placed next to each other.
2. A blue stripe must always be placed between a white and a red or between a red and a white one. Hence blue stripe cannot be placed at starting or at ending.
3. Its not necessary to use all three colors.
Input Format :
Single Integer N
Output Format :
Single Integer representing number of ways to create a flag
Constraints :
1 <= N <= 30
Sample Input 1 :
3
Sample Output 1 :
4
Sample Output 1 Explanation :
Possible flags with 3 stripes are : WRW, WBR, RWR, RBW
Sample Input 2 :
4
Sample Output 2 :
6
Sample Output 2 Explanation :
Possible flags with 4 stripes are : WRWR, WRBW, WBRW, RWRW, RWBR, RBWR
*/

long long calculateWays(int N,char prev,char prevprev){
    if(N==1)
        return 1;
    if(prev=='B'&&prevprev=='S')
        return calculateWays(N-1,'R','B')+calculateWays(N-1,'W','B');
    
    else if(prev=='B'){
        if(prevprev=='R')
            return calculateWays(N-1,'W','B');
        else if(prevprev=='W')
            return calculateWays(N-1,'R','B');
    }
    else if(prev=='R')
        return calculateWays(N-1,'W','R')+calculateWays(N-1,'B','R');
    else
        return calculateWays(N-1,'R','W')+calculateWays(N-1,'B','W'); 
}


long long find_Ways(int N)
{
    /* Don't write main().
   * Don't read input, it is passed as function argument.
   * Taking input and printing output is handled automatically.
  */
    return calculateWays(N,'B','S');

}
