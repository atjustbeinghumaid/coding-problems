/*
Given a string expression which consists only ‘}’ and ‘{‘. The expression may not be balanced. You need to find the minimum number of bracket reversals which are required to make the expression balanced.
Return -1 if the given expression can't be balanced.
Input Format :
String S
Output Format :
Required count
Sample Input 1 :
{{{
Sample Output 1 :
-1
Sample Input 2 :
{{{{}}
Sample Output 2 :
1
*/


#include<bits/stdc++.h>
using namespace std;
int countBracketReversals(char input[]){
	// Write your code here
    int count = 0;
    stack<char> s;
    for(int i = 0; i < strlen(input); i++){
        if(input[i] == '{')
            s.push('{');
        else{
            if(s.empty()){
                count++;
                s.push('{');
            }
            else{
                s.pop();
            }
        }
    }
    if(s.size() % 2 == 1)
        return -1;
    count += (s.size() / 2);
    return count;
}
