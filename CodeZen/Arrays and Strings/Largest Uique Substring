/*
Given a string S, find the largest substring with no repetition i.e. largest substring which contain all unique characters.
Input Format :
String S
Output Format :
Largest unique substring
Constraints :
1 <= Length os String S <= 10^3
Sample Input:
abcdabceb
Sample Output:
dabce
*/

// input - given string
// output - output string that contains largest unique substring
void findLargestUniqueSubstring(char input[], char output[]){
	// Write your code here
    int ht[256]={0};
    int curr_len=0,max_len=0,beg=0;
    int i,j=0;
    for(i=0;input[i]!='\0';i++){
        ht[input[i]]++;
        while(ht[input[i]]>1){
            ht[input[j]]--;
            j++;
        }
        curr_len = i-j+1;
        if(curr_len>max_len){
            max_len = curr_len;
            beg = j;
       } 
    }
    for(int k = beg ; k<beg+max_len ; k++)
        output[k-beg]=input[k];
    output[max_len]='\0';
}
