
/*Please note that it's Function problem i.e.
you need to write your solution in the form of Function(s) only.
Driver Code to call/invoke your function is mentioned above.*/

/*The function returns a vector containing the 
increasing sub-sequence of length 3 if present
else returns an empty vector */
vector<int> find3Numbers(vector<int> A, int N)
{
   //Your code here
   int smaller[N],larger[N],min=0,max=N-1;
   smaller[0]=larger[N-1]=-1;
   for(int i=1;i<N;i++){
    if(A[i]<=A[min]){
    min = i;
    smaller[i]=-1;
    }
    else
    smaller[i]=min;
   }
   for(int j=N-2;j>=0;j--){
       if(A[j]>=A[max]){
           larger[j]=-1;
           max = j;
       }
       else
       larger[j] = max;
   }
   vector<int> v;
   for(int k=0;k<N;k++){
       if(smaller[k]!=-1&&larger[k]!=-1){
       v.push_back(A[smaller[k]]);
       v.push_back(A[k]);
       v.push_back(A[larger[k]]);
       break;
       }
   }
   return v;
}
